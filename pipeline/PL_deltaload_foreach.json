{
	"name": "PL_deltaload_foreach",
	"properties": {
		"activities": [
			{
				"name": "Lookup_watermarktable",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from empdata.deltaloadmeta",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_Parameterized_az_sql",
						"type": "DatasetReference",
						"parameters": {
							"schema": "empdata",
							"table_name": "deltaloadmeta"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach_to_copy_incrementt_to_Datalake",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup_watermarktable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup_watermarktable').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Lookup_to_get_new_watermark",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select max(modified_date)as new_watermark from ', item().sourceschema, '.', item().sourcetable)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_Parameterized_az_sql",
									"type": "DatasetReference",
									"parameters": {
										"schema": {
											"value": "@item().sourceschema ",
											"type": "Expression"
										},
										"table_name": {
											"value": "@item().sourcetable",
											"type": "Expression"
										}
									}
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Copy data from source to blob",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Lookup_to_get_new_watermark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select * from ', item().sourceschema, '.', item().sourcetable, ' where modified_date > ''',item().watermark, ''' and modified_date <= ''', activity('Lookup_to_get_new_watermark').output.value[0].new_watermark ,'''')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_Parameterized_az_sql",
									"type": "DatasetReference",
									"parameters": {
										"schema": {
											"value": "@item().sourceschema",
											"type": "Expression"
										},
										"table_name": {
											"value": "@item().sourcetable",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_Parameterized",
									"type": "DatasetReference",
									"parameters": {
										"container": "input",
										"folder": "increment",
										"file": {
											"value": "@item().laketablename",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Update_the_watermark_in_sink",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data from source to blob",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[empdata].[update_deltaloadmeta]",
								"storedProcedureParameters": {
									"sinktable": {
										"value": {
											"value": "@item().sinktable",
											"type": "Expression"
										},
										"type": "String"
									},
									"watermark": {
										"value": {
											"value": "@activity('Lookup_to_get_new_watermark').output.value[0].new_watermark",
											"type": "Expression"
										},
										"type": "Datetime"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_adfsql2",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "ForEach_to_update_increment_to_Sink",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "ForEach_to_copy_incrementt_to_Datalake",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup_watermarktable').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy_from_datalake_sql",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": false,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "upsert",
									"upsertSettings": {
										"useTempDB": true,
										"keys": {
											"value": "@array(item().keycolumn)",
											"type": "Expression"
										}
									},
									"sqlWriterUseTableLock": false,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_Parameterized",
									"type": "DatasetReference",
									"parameters": {
										"container": "input",
										"folder": "increment",
										"file": {
											"value": "@item().laketablename",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_Parameterized_az_sql",
									"type": "DatasetReference",
									"parameters": {
										"schema": {
											"value": "@item().sinkschema",
											"type": "Expression"
										},
										"table_name": {
											"value": "@item().sinktable",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"folder": {
			"name": "Copy_Data"
		},
		"annotations": [],
		"lastPublishTime": "2024-05-18T15:58:02Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}